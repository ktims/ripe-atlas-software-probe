# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build DEB Packages

on:
  release:
  push:
  workflow_dispatch:

env:
  build_deps: git tar fakeroot libssl-dev libcap2-bin autoconf automake libtool build-essential

jobs:
  build_x64:
    runs-on: ubuntu-latest
    name: DEB build on x64

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Prepare build environment
        run: |
          sudo apt install -q -y ${{ env.build_deps }}

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Build Package
        run: |
          $GITHUB_WORKSPACE/build-config/debian/bin/make-deb
      
      - name: Create Artifact
        uses: actions/upload-artifact@v3
        with:
          name: atlas_software_probe_x64
          path: ./*.deb
  build_all_archs:
    runs-on: ubuntu-latest
    name: DEB build on ${{ matrix.arch }}
    env:
      artifact_name: atlas_software_probe_${{ matrix.arch }}

    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu_latest
          - arch: armv7
            distro: bullseye
          - arch: armv6
            distro: bullseye

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Build on arch ${{ matrix.arch }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          shell: /bin/bash
          install: |
            apt update -q -y
            apt install -q -y ${{ env.build_deps }}
          run: |
            $GITHUB_WORKSPACE/build-config/debian/bin/make-deb
            cp *.deb /artifacts/${{ env.artifact_name }}.deb
      - name: Create Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: artifacts/${{ env.artifact_name }}.deb